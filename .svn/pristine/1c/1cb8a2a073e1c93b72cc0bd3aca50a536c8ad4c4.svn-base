<template>
  <div class="comment">
    <div class="score">
      <label>卫生:</label>
      <rater v-model="healthScore" :font-size="37"></rater>
    </div>
    <div class="score">
      <label>环境:</label>
      <rater v-model="evnScore" :font-size="37"></rater>
    </div>
    <div class="score">
      <label>服务:</label>
      <rater v-model="serviceScore" :font-size="37"></rater>
    </div>
    <div class="score">
      <label>设施:</label>
      <rater v-model="facilityScore" :font-size="37"></rater>
    </div>
    <div class="comment-input">
      <label>填写评论</label>
      <x-textarea v-model="content" placeholder="评论" :height="249" :show-counter="true" :max="200"></x-textarea>
    </div>
    <div class="pic-upload">
      <label>上传图片</label>
      <upload v-on:fileList="computeImgs"></upload>
    </div>
    <button v-on:click="_addComment">发表评论</button>
  </div>
</template>

<script>
  import {Rater, XTextarea} from 'vux'
  import upload from '@/components/upload'
  // import {addComment} from '@/api/getData'

  export default {
    data () {
      return {
        healthScore: 4,
        evnScore: 4,
        serviceScore: 4,
        facilityScore: 4,
        content: '',
        orderId: '',
        shopId: '',
        goodsId: '',
        imgs: ''
      }
    },
    components: {
      Rater,
      XTextarea,
      upload
    },
    methods: {
      _addComment () {
        // let createrId = this.$store.state.user.id
        // addComment(createrId, this.orderId, this.healthScore, this.evnScore, this.serviceScore, this.facilityScore, this.shopId, this.goodsId, this.content, this.imgs).then(res => {
        //   if (res.data.state === 1) {
        //     this.$router.push({path: 'result', query: {param: 'comment'}})
        //   }
        // })
      },
      computeImgs (arr) {
        this.imgs = arr.join(',')
      }
    },
    created () {
      // if (this.$route.query.orderId) {
      //   this.orderId = this.$route.query.orderId
      // }
      // if (this.$route.query.shopId) {
      //   this.shopId = this.$route.query.shopId
      // }
      // if (this.$route.query.goodsId) {
      //   this.goodsId = this.$route.query.goodsId
      // }
    }
  }
</script>

<style lang="less" scoped>
  @import "../style/main.less";

  .comment {
    width: 100%;
    height: 100%;
    overflow-x: hidden;
    overflow-y: scroll;
    /*background-color: @bgColor;*/
    .px2rem(padding-top, 20);
    .score {
      width: 100%;
      .px2rem(height, 80);
      .px2rem(line-height, 80);
      .px2rem(padding-left, 32);
      /*.px2px(font-size, 30);*/
      color: #4c4c4c;
      background-color: #fff;
      border-bottom: 1px solid #dcdcdc;
      label {
        .px2rem(margin-right, 82);
      }
    }
    .comment-input, .pic-upload {
      width: 100%;
      .px2rem(margin-top, 20);
      background-color: #fff;
      border-bottom: 1px solid #dcdcdc;
      /*.px2px(font-size, 24);*/
      label {
        display: block;
        width: 100%;
        /*.px2px(font-size, 30);*/
        color: #4c4c4c;
        .px2rem(height, 70);
        .px2rem(line-height, 70);
        .px2rem(padding-left, 32);
        border-bottom: 1px solid #dcdcdc;
      }
      textarea {
        text-indent: 1em;
      }
    }
    button {
      display: block;
      .px2rem(width, 600);
      .px2rem(height, 80);
      .px2rem(line-height, 80);
      margin: 0 auto;
      .px2rem(margin-top, 80);
      .px2rem(margin-bottom, 80);
      /*.px2px(font-size, 40);*/
      color: #fff;
      text-align: center;
      /*background-color: @themeColor;*/
      border-radius: 5px;
      &:active {
        background-color: #338bc8;
      }
    }
  }

</style>
